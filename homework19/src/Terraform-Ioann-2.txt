provider "aws" {
  region = "eu-central-1"  
  profile = "mfa"
}

# 1. Создание VPC
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
}

# 2. Публичная подсеть
resource "aws_subnet" "public_subnet" {
  vpc_id = aws_vpc.my_vpc.id
  cidr_block = "10.0.1.0/24"
  map_public_ip_on_launch = true
}

# 3. Приватная подсеть
resource "aws_subnet" "private_subnet" {
  vpc_id = aws_vpc.my_vpc.id
  cidr_block = "10.0.2.0/24"
}

# 4. Интернет-шлюз
resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id
}

# 5. Таблица маршрутов для публичной подсети
resource "aws_route_table" "public_route_table" {
  vpc_id = aws_vpc.my_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.my_igw.id
  }
}

resource "aws_route_table_association" "public_subnet_association" {
  subnet_id  = aws_subnet.public_subnet.id
  route_table_id = aws_route_table.public_route_table.id
}

# 6. NAT-шлюз для приватного инстанса
resource "aws_eip" "nat_eip" {
  tags = {
    Name = "Elastic IP for NAT Gateway"
  }
}

resource "aws_nat_gateway" "my_nat_gateway" {
  allocation_id = aws_eip.nat_eip.id
  subnet_id = aws_subnet.public_subnet.id
}

# 7. Таблица маршрутов для приватной подсети
resource "aws_route_table" "private_route_table" {
  vpc_id = aws_vpc.my_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    nat_gateway_id = aws_nat_gateway.my_nat_gateway.id
  }
}

resource "aws_route_table_association" "private_subnet_association" {
  subnet_id = aws_subnet.private_subnet.id
  route_table_id = aws_route_table.private_route_table.id
}

# 8. Security Group для публичного EC2
resource "aws_security_group" "public_sg" {
  vpc_id = aws_vpc.my_vpc.id

  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port = 80
    to_port = 80
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port = 0
    to_port = 0
    protocol = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# 9. Security Group для приватного EC2
resource "aws_security_group" "private_sg" {
  vpc_id = aws_vpc.my_vpc.id

  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    security_groups = [aws_security_group.public_sg.id]
  }

  egress {
    from_port = 0
    to_port = 0
    protocol = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# 10. Публичный EC2
resource "aws_instance" "public_instance" {
  ami = "ami-0bade3941f267d2b8"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.public_subnet.id
  key_name = "Ioann-frankfurd-Dan"
  vpc_security_group_ids = [aws_security_group.public_sg.id]

  tags = {
    Name  = "Ioann-public"
    Owner = "Ioann"
  }
}

# 11. Приватный EC2
resource "aws_instance" "private_instance" {
  ami = "ami-0bade3941f267d2b8"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.private_subnet.id
  key_name = "Ioann-frankfurd-Dan"
  vpc_security_group_ids = [aws_security_group.private_sg.id]

  tags = {
    Name  = "Ioann-private"
    Owner = "Ioann"
  }
}