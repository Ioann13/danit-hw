apiVersion: v1  # Определяет API-версию Kubernetes, используемую для объекта Service.
kind: Service  # Указывает, что этот объект - сервис, который управляет доступом к подам.
metadata:  # Метаинформация о сервисе.
  name: python-random-service  # Имя сервиса в кластере Kubernetes.

spec:  # Основная конфигурация сервиса.
  selector:  # Определяет, какие поды будут обслуживаться этим сервисом.
    app: python-random  # Сервис будет искать поды с этим же лейблом в разделе labels.

  type: NodePort  # Указывает тип сервиса. NodePort делает его доступным снаружи кластера на определенном порту узла.

  ports:  # Определяет порты, используемые сервисом.
    - protocol: TCP  # Протокол связи, который будет использоваться (в данном случае TCP).
      port: 80  # Внешний порт, на котором сервис принимает запросы.
      targetPort: 8082  # Порт внутри пода, куда будут перенаправляться запросы.
      nodePort: 30080  # Порт узла, через который сервис будет доступен извне кластера.

### Итог:Этот `Service` с именем `python-random-service` перенаправляет трафик с порта `80` на `8082` внутри подов, содержащих лейбл `app: python-random`. Он также выделяет `NodePort 30080`, позволяя доступ к сервису извне кластера через узлы.

